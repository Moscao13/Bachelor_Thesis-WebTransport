/**
 * @typedef {import('./session').Http3WTSession} Http3WTSession
 * @typedef {import('./types').Http3ClientInit} Http3ClientInit
 *
 * Http3Client events
 * @typedef {import('./types').Http3ClientEventHandler} Http3ClientEventHandler
 * @typedef {import('./types').ClientConnectedEvent} ClientConnectedEvent
 * @typedef {import('./types').ClientWebtransportSupportEvent} ClientWebtransportSupportEvent
 * @typedef {import('./types').Http3WTSessionVisitorEvent} Http3WTSessionVisitorEvent
 */
/**
 * @implements {Http3ClientEventHandler}
 */
export class Http3Client extends Http3WebTransport implements Http3ClientEventHandler {
    /**
     * @param {Http3ClientInit} args
     */
    constructor(args: Http3ClientInit);
    /** @type {{ resolve: (value?: any) => void, reject: (err?: Error) => void} | null | undefined} */
    sessionProm: {
        resolve: (value?: any) => void;
        reject: (err?: Error) => void;
    } | null | undefined;
    /** @type {Promise<void> | undefined} */
    sessionobj: Promise<void> | undefined;
    /** @type {Http3WTSession | null | undefined} */
    sessionobjint: Http3WTSession | null | undefined;
    closeHookSession(): void;
    /** @type {{ resolve: (value?: any) => void, reject: (err?: Error) => void} | null | undefined} */
    webtransportProm: {
        resolve: (value?: any) => void;
        reject: (err?: Error) => void;
    } | null | undefined;
    /** @type {{ resolve: (value?: any) => void, reject: (err?: Error) => void} | null | undefined} */
    quicconnectedProm: {
        resolve: (value?: any) => void;
        reject: (err?: Error) => void;
    } | null | undefined;
    _quicConnectTimeout: number;
    _webTransportConnectTimeout: number;
    handleConnection(): Promise<void>;
    quicconnected: Promise<any> | undefined;
    webtransport: Promise<any> | undefined;
    /**
     * @param {Http3WTSession} sessionobj
     * @param {string} path
     * @returns
     */
    createWTSession(sessionobj: Http3WTSession, path: string): Promise<void | undefined>;
    stopped: boolean | undefined;
    /**
     * @param {ClientConnectedEvent} args
     */
    onClientConnected(args: ClientConnectedEvent): void;
    /**
     * @param {ClientWebtransportSupportEvent} args
     */
    onClientWebTransportSupport(args: ClientWebtransportSupportEvent): void;
    /**
     * @param {Http3WTSessionVisitorEvent} args
     */
    onHttp3WTSessionVisitor(args: Http3WTSessionVisitorEvent): void;
    /**
     * @param {ClientConnectedEvent | ClientWebtransportSupportEvent | Http3WTSessionVisitorEvent} args
     */
    customCallback(args: ClientConnectedEvent | ClientWebtransportSupportEvent | Http3WTSessionVisitorEvent): void;
}
export type Http3WTSession = import('./session').Http3WTSession;
/**
 * Http3Client events
 */
export type Http3ClientInit = import('./types').Http3ClientInit;
export type Http3ClientEventHandler = import('./types').Http3ClientEventHandler;
export type ClientConnectedEvent = import('./types').ClientConnectedEvent;
export type ClientWebtransportSupportEvent = import('./types').ClientWebtransportSupportEvent;
export type Http3WTSessionVisitorEvent = import('./types').Http3WTSessionVisitorEvent;
import { Http3WebTransport } from "./transport.js";
//# sourceMappingURL=client.d.ts.map